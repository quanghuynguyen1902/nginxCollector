{"remainingRequest":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/babel-loader/lib/index.js!/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quanghuy/Desktop/dashboard/montoring/src/components/charts/MethodChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quanghuy/Desktop/dashboard/montoring/src/components/charts/MethodChart.vue","mtime":1617634304550},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/babel-loader/lib/index.js","mtime":1613788894194},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js","mtime":1613788894243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3F1YW5naHV5L0Rlc2t0b3AvZGFzaGJvYXJkL21vbnRvcmluZy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IEFwaSBmcm9tICJAL2NvbnN0YW50cy9iYWNrZW5kQXBpIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJNZXRob2RDaGFydCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRvdGFsOiAwLAogICAgICBtZXRob2RzOiB7fQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldERhdGEoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQoIiIuY29uY2F0KEFwaS5SRVFVRVNUU19BTkFMWVRJQywgIj91c2VyX2lkPSIpLmNvbmNhdChfdGhpcy4kcm91dGUucGFyYW1zLnVzZXJfaWQpKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMudG90YWwgPSByZXNwb25zZS5kYXRhLnRvdGFsOwogICAgICAgICAgICAgICAgX3RoaXMubWV0aG9kcyA9IHJlc3BvbnNlLmRhdGEubWV0aG9kczsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["MethodChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,GAAA,MAAA,wBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,OARA,qBAQA;AACA,SAAA,OAAA;AACA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,GAAA,WACA,GAAA,CAAA,iBADA,sBACA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,OADA,EADA;;AAAA;AACA,gBAAA,QADA;AAIA,gBAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAPA;AAXA,CAAA","sourcesContent":["<template>\n  <CRow>\n    <CCol sm=\"12\">\n      <CRow>\n        <CCol sm=\"12\">\n          <CCallout color=\"success\">\n            <small class=\"text-muted\">Total request</small><br />\n            <strong class=\"h4\">{{ total }}</strong>\n          </CCallout>\n        </CCol>\n      </CRow>\n      <hr class=\"mt-0\" />\n      <ul class=\"horizontal-bars type-2\">\n        <div\n          v-for=\"(method, index) in methods\"\n          :key=\"index\"\n          class=\"progress-group\"\n        >\n          <div class=\"progress-group-header\">\n            <span class=\"title\">{{ method.name }}</span>\n            <span class=\"ml-auto font-weight-bold\">\n              {{ method.count }}\n              <span class=\"text-muted small\"\n                >{{ Math.round(method.count / total) * 100 }} %\n              </span>\n            </span>\n          </div>\n          <div class=\"progress-group-bars\">\n            <CProgress\n              class=\"progress-xs\"\n              :value=\"Math.round(method.count / total) * 100\"\n              color=\"success\"\n            />\n          </div>\n        </div>\n      </ul>\n    </CCol>\n  </CRow>\n</template>\n<script>\nimport axios from \"axios\";\nimport Api from \"@/constants/backendApi\";\nexport default {\n  name: \"MethodChart\",\n  data() {\n    return {\n      total: 0,\n      methods: {}\n    };\n  },\n  mounted() {\n    this.getData();\n  },\n  methods: {\n    async getData() {\n      const response = await axios.get(\n        `${Api.REQUESTS_ANALYTIC}?user_id=${this.$route.params.user_id}`\n      );\n      this.total = response.data.total;\n      this.methods = response.data.methods;\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/charts"}]}