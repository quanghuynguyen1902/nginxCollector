{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js!/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/charts/MethodChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/app/src/components/charts/MethodChart.vue","mtime":1619597262126},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1613788894194},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1613788894243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9hcHAvbm9kZV9tb2R1bGVzL0B2dWUvYmFiZWwtcHJlc2V0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFVzZXJTZXJ2aWNlIGZyb20gIi4uLy4uL2FwaS91c2VyU2VydmljZSI7CmltcG9ydCBBcGkgZnJvbSAiQC9jb25zdGFudHMvYmFja2VuZEFwaSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTWV0aG9kQ2hhcnQiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0b3RhbDogMCwKICAgICAgbWV0aG9kczoge30KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXREYXRhKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXREYXRhOiBmdW5jdGlvbiBnZXREYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gVXNlclNlcnZpY2UuZ2V0VXNlckJvYXJkKCIiLmNvbmNhdChBcGkuUkVRVUVTVFNfQU5BTFlUSUMsICI/dXNlcl9pZD0iKS5jb25jYXQoX3RoaXMuJHJvdXRlLnBhcmFtcy51c2VyX2lkKSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLnRvdGFsID0gcmVzcG9uc2UuZGF0YS50b3RhbDsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzLnRvdGFsKTsKICAgICAgICAgICAgICAgIF90aGlzLm1ldGhvZHMgPSByZXNwb25zZS5kYXRhLm1ldGhvZHM7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["MethodChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,OAAA,WAAA,MAAA,uBAAA;AACA,OAAA,GAAA,MAAA,wBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GAPA;AAQA,EAAA,OARA,qBAQA;AACA,SAAA,OAAA;AACA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,WAAA,CAAA,YAAA,WACA,GAAA,CAAA,iBADA,sBACA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,OADA,EADA;;AAAA;AACA,gBAAA,QADA;AAIA,gBAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AARA;AAXA,CAAA","sourcesContent":["<template>\n  <CRow>\n    <CCol sm=\"12\">\n      <CRow>\n        <CCol sm=\"12\">\n          <CCallout color=\"success\">\n            <small class=\"text-muted\">Total request</small><br />\n            <strong class=\"h4\">{{ total }}</strong>\n          </CCallout>\n        </CCol>\n      </CRow>\n      <hr class=\"mt-0\" />\n      <ul class=\"horizontal-bars type-2\">\n        <div\n          v-for=\"(method, index) in methods\"\n          :key=\"index\"\n          class=\"progress-group\"\n        >\n          <div class=\"progress-group-header\">\n            <span class=\"title\">{{ method.name }}</span>\n            <span class=\"ml-auto font-weight-bold\">\n              {{ method.count }}\n              <span class=\"text-muted small\"\n                >{{ (method.count / total).toFixed(2) * 100 }} %\n              </span>\n            </span>\n          </div>\n          <div class=\"progress-group-bars\">\n            <CProgress\n              class=\"progress-xs\"\n              :value=\"(method.count / total).toFixed(2) * 100\"\n              color=\"success\"\n            />\n          </div>\n        </div>\n      </ul>\n    </CCol>\n  </CRow>\n</template>\n<script>\nimport UserService from \"../../api/userService\";\nimport Api from \"@/constants/backendApi\";\nexport default {\n  name: \"MethodChart\",\n  data() {\n    return {\n      total: 0,\n      methods: {}\n    };\n  },\n  mounted() {\n    this.getData();\n  },\n  methods: {\n    async getData() {\n      const response = await UserService.getUserBoard(\n        `${Api.REQUESTS_ANALYTIC}?user_id=${this.$route.params.user_id}`\n      );\n      this.total = response.data.total;\n      console.log(this.total);\n      this.methods = response.data.methods;\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/charts"}]}