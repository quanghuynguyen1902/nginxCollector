{"remainingRequest":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/babel-loader/lib/index.js!/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quanghuy/Desktop/dashboard/montoring/src/views/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quanghuy/Desktop/dashboard/montoring/src/views/Users.vue","mtime":1617366061773},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/babel-loader/lib/index.js","mtime":1613788894194},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js","mtime":1613788894243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL3F1YW5naHV5L0Rlc2t0b3AvZGFzaGJvYXJkL21vbnRvcmluZy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvaG9tZS9xdWFuZ2h1eS9EZXNrdG9wL2Rhc2hib2FyZC9tb250b3Jpbmcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEFwaSBmcm9tICJAL2NvbnN0YW50cy9iYWNrZW5kQXBpIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJVc2VycyIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGl0ZW1zOiBbXSwKICAgICAgZmllbGRzOiBbewogICAgICAgIGtleTogInVzZXJfaWQiCiAgICAgIH1dLAogICAgICBhY3RpdmVQYWdlOiAxCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0X3VzZXJzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRfdXNlcnM6IGZ1bmN0aW9uIGdldF91c2VycygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCBfaXRlcmF0b3IsIF9zdGVwLCBrZXk7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChBcGkuVVNFUlMpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihyZXNwb25zZS5kYXRhLmtleXMpOwoKICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgICAgICAgICAga2V5ID0gX3N0ZXAudmFsdWU7CgogICAgICAgICAgICAgICAgICAgIF90aGlzLmZpZWxkcy5wdXNoKHsKICAgICAgICAgICAgICAgICAgICAgIGtleToga2V5CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgICAgICBfaXRlcmF0b3IuZShlcnIpOwogICAgICAgICAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgICAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfdGhpcy5pdGVtcyA9IHJlc3BvbnNlLmRhdGEucmVzdWx0czsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHJvd0NsaWNrZWQ6IGZ1bmN0aW9uIHJvd0NsaWNrZWQoaXRlbSkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogIi91c2Vycy8iLmNvbmNhdChpdGVtLnVzZXJfaWQpCiAgICAgIH0pOwogICAgfSwKICAgIHBhZ2VDaGFuZ2U6IGZ1bmN0aW9uIHBhZ2VDaGFuZ2UodmFsKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBxdWVyeTogewogICAgICAgICAgcGFnZTogdmFsCiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,OAAA,GAAA,MAAA,wBAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,MAAA,EAAA,CAAA;AAAA,QAAA,GAAA,EAAA;AAAA,OAAA,CAFA;AAGA,MAAA,UAAA,EAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OATA,qBASA;AACA,SAAA,SAAA;AACA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,GAAA,CAAA,GAAA,CAAA,KAAA,CADA;;AAAA;AACA,gBAAA,QADA;AAAA,uDAEA,QAAA,CAAA,IAAA,CAAA,IAFA;;AAAA;AAEA,sEAAA;AAAA,oBAAA,GAAA;;AACA,oBAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AAAA,sBAAA,GAAA,EAAA;AAAA,qBAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;;AAKA,gBAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,KAPA;AAQA,IAAA,UARA,sBAQA,IARA,EAQA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,mBAAA,IAAA,CAAA,OAAA;AAAA,OAAA;AACA,KAVA;AAWA,IAAA,UAXA,sBAWA,GAXA,EAWA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA;AAAA,QAAA,KAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA;AAAA,OAAA;AACA;AAbA;AAZA,CAAA","sourcesContent":["<template>\n  <CRow>\n    <CCol col=\"12\" xl=\"8\">\n      <CCard>\n        <CCardHeader>\n          Users\n        </CCardHeader>\n        <CCardBody>\n          <CDataTable\n            hover\n            striped\n            :items=\"items\"\n            :fields=\"fields\"\n            :items-per-page=\"5\"\n            clickable-rows\n            :active-page=\"activePage\"\n            @row-clicked=\"rowClicked\"\n            :pagination=\"{ doubleArrows: false, align: 'center' }\"\n            @page-change=\"pageChange\"\n          >\n          </CDataTable>\n        </CCardBody>\n      </CCard>\n    </CCol>\n  </CRow>\n</template>\n\n<script>\nimport Api from \"@/constants/backendApi\";\nimport axios from \"axios\";\nexport default {\n  name: \"Users\",\n  data() {\n    return {\n      items: [],\n      fields: [{ key: \"user_id\" }],\n      activePage: 1\n    };\n  },\n  mounted() {\n    this.get_users();\n  },\n  methods: {\n    async get_users() {\n      const response = await axios.get(Api.USERS);\n      for (let key of response.data.keys) {\n        this.fields.push({ key: key });\n      }\n      this.items = response.data.results;\n    },\n    rowClicked(item) {\n      this.$router.push({ path: `/users/${item.user_id}` });\n    },\n    pageChange(val) {\n      this.$router.push({ query: { page: val } });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/views"}]}