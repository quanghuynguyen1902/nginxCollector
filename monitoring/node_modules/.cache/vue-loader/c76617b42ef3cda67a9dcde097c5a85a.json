{"remainingRequest":"/home/quanghuy/Desktop/dashboard/monitoring/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quanghuy/Desktop/dashboard/monitoring/src/views/Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quanghuy/Desktop/dashboard/monitoring/src/views/Users.vue","mtime":1619520973050},{"path":"/home/quanghuy/Desktop/dashboard/monitoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/monitoring/node_modules/babel-loader/lib/index.js","mtime":1613788894194},{"path":"/home/quanghuy/Desktop/dashboard/monitoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/monitoring/node_modules/vue-loader/lib/index.js","mtime":1613788894243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBcGkgZnJvbSAiQC9jb25zdGFudHMvYmFja2VuZEFwaSI7CmltcG9ydCBVc2VyU2VydmljZSBmcm9tICIuLi9hcGkvdXNlclNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlVzZXJzIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXRlbXM6IFtdLAogICAgICBmaWVsZHM6IFt7IGtleTogInVzZXJfaWQiIH1dLAogICAgICBhY3RpdmVQYWdlOiAxCiAgICB9OwogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0X3VzZXJzKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBnZXRfdXNlcnMoKSB7CiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgVXNlclNlcnZpY2UuZ2V0VXNlckJvYXJkKEFwaS5VU0VSUyk7CiAgICAgIGZvciAobGV0IGtleSBvZiByZXNwb25zZS5kYXRhLmtleXMpIHsKICAgICAgICB0aGlzLmZpZWxkcy5wdXNoKHsga2V5OiBrZXkgfSk7CiAgICAgIH0KICAgICAgdGhpcy5pdGVtcyA9IHJlc3BvbnNlLmRhdGEucmVzdWx0czsKICAgIH0sCiAgICByb3dDbGlja2VkKGl0ZW0pIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoOiBgL3VzZXJzLyR7aXRlbS51c2VyX2lkfWAgfSk7CiAgICB9LAogICAgcGFnZUNoYW5nZSh2YWwpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBxdWVyeTogeyBwYWdlOiB2YWwgfSB9KTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <CRow>\n    <CCol col=\"12\" xl=\"8\">\n      <CCard>\n        <CCardHeader>\n          Users\n        </CCardHeader>\n        <CCardBody>\n          <CDataTable\n            hover\n            striped\n            :items=\"items\"\n            :fields=\"fields\"\n            :items-per-page=\"5\"\n            clickable-rows\n            :active-page=\"activePage\"\n            @row-clicked=\"rowClicked\"\n            :pagination=\"{ doubleArrows: false, align: 'center' }\"\n            @page-change=\"pageChange\"\n          >\n          </CDataTable>\n        </CCardBody>\n      </CCard>\n    </CCol>\n  </CRow>\n</template>\n\n<script>\nimport Api from \"@/constants/backendApi\";\nimport UserService from \"../api/userService\";\nexport default {\n  name: \"Users\",\n  data() {\n    return {\n      items: [],\n      fields: [{ key: \"user_id\" }],\n      activePage: 1\n    };\n  },\n  mounted() {\n    this.get_users();\n  },\n  methods: {\n    async get_users() {\n      const response = await UserService.getUserBoard(Api.USERS);\n      for (let key of response.data.keys) {\n        this.fields.push({ key: key });\n      }\n      this.items = response.data.results;\n    },\n    rowClicked(item) {\n      this.$router.push({ path: `/users/${item.user_id}` });\n    },\n    pageChange(val) {\n      this.$router.push({ query: { page: val } });\n    }\n  }\n};\n</script>\n"]}]}