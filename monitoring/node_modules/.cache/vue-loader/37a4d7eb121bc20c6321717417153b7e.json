{"remainingRequest":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quanghuy/Desktop/dashboard/montoring/src/components/user-detail/UserListTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quanghuy/Desktop/dashboard/montoring/src/components/user-detail/UserListTable.vue","mtime":1619520963846},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/babel-loader/lib/index.js","mtime":1613788894194},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js","mtime":1613788894243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBVc2VyU2VydmljZSBmcm9tICIuLi8uLi9zZXJ2aWNlL3VzZXJTZXJ2aWNlIjsKaW1wb3J0IEFwaSBmcm9tICJAL2NvbnN0YW50cy9iYWNrZW5kQXBpIjsKaW1wb3J0IERldGFpbFJlcXVlc3QgZnJvbSAiQC9jb21wb25lbnRzL0RldGFpbFJlcXVlc3QiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlVzZXJMaXN0VGFibGUiLAogIGNvbXBvbmVudHM6IHsKICAgIERldGFpbFJlcXVlc3QKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhOiBbXSwKICAgICAgY29sbGFwc2VEdXJhdGlvbjogMCwKICAgICAgZmllbGRzOiBbCiAgICAgICAgeyBrZXk6ICJ1c2VyX2lkIiB9LAogICAgICAgIHsga2V5OiAidXJsIiB9LAogICAgICAgIHsga2V5OiAicmVxdWVzdF9tZXRob2QiIH0sCiAgICAgICAgeyBrZXk6ICJzdGF0dXMiIH0sCiAgICAgICAgewogICAgICAgICAga2V5OiAic2hvd19kZXRhaWxzIiwKICAgICAgICAgIGxhYmVsOiAiRGV0YWlsIiwKICAgICAgICAgIF9zdHlsZTogIndpZHRoOjElIiwKICAgICAgICAgIHNvcnRlcjogZmFsc2UsCiAgICAgICAgICBmaWx0ZXI6IGZhbHNlCiAgICAgICAgfQogICAgICBdLAogICAgICBwYWdlOiAxLAogICAgICB0b3RhbHBhZ2U6IDEKICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5nZXREYXRhKCk7CiAgfSwKICB3YXRjaDogewogICAgJHJvdXRlKHRvLCBmcm9tKSB7CiAgICAgIGlmICh0byAhPT0gZnJvbSkgewogICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgICB9CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgY2hhbmdlRGF0YSgpIHsKICAgICAgcmV0dXJuIHRoaXMuZGF0YTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldERhdGEoKSB7CiAgICAgIGxldCByZXNwb25zZSA9ICIiOwogICAgICB0aGlzLnBhZ2UgPSBwYXJzZUludCh0aGlzLiRyb3V0ZS5xdWVyeS5wYWdlKSB8fCAxOwoKICAgICAgcmVzcG9uc2UgPSBhd2FpdCBVc2VyU2VydmljZS5nZXRVc2VyQm9hcmQoCiAgICAgICAgYCR7QXBpLlVTRVJfREVUQUlMU30/cGFnZT0ke3RoaXMucGFnZX0mdXNlcl9pZD0ke3RoaXMuJHJvdXRlLnBhcmFtcy51c2VyX2lkfWAKICAgICAgKTsKCiAgICAgIHRoaXMudG90YWxwYWdlID0gTWF0aC5jZWlsKHJlc3BvbnNlLmRhdGEuY291bnRzIC8gMTApOwogICAgICB0aGlzLmRhdGEgPSByZXNwb25zZS5kYXRhLnJlc3VsdHMubWFwKChpdGVtLCBpZCkgPT4gewogICAgICAgIHJldHVybiB7IC4uLml0ZW0sIGlkIH07CiAgICAgIH0pOwogICAgfSwKICAgIGdldFJlc3VsdFBhZ2UocGFnZSkgewogICAgICB0aGlzLnBhZ2UgPSBwYWdlOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogdGhpcy4kcm91dGUuZnVsbFBhdGgsCiAgICAgICAgcXVlcnk6IHsgcGFnZTogdGhpcy5wYWdlIH0KICAgICAgfSk7CiAgICB9LAogICAgdG9nZ2xlRGV0YWlscyhpdGVtKSB7CiAgICAgIHRoaXMuJHNldCh0aGlzLmRhdGFbaXRlbS5pZF0sICJfdG9nZ2xlZCIsICFpdGVtLl90b2dnbGVkKTsKICAgICAgdGhpcy5jb2xsYXBzZUR1cmF0aW9uID0gMzAwOwogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgdGhpcy5jb2xsYXBzZUR1cmF0aW9uID0gMDsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0QmFkZ2UocmVxdWVzdF9tZXRob2QpIHsKICAgICAgc3dpdGNoIChyZXF1ZXN0X21ldGhvZCkgewogICAgICAgIGNhc2UgIkdFVCI6CiAgICAgICAgICByZXR1cm4gInN1Y2Nlc3MiOwogICAgICAgIGNhc2UgIk9QVElPTlMiOgogICAgICAgICAgcmV0dXJuICJzZWNvbmRhcnkiOwogICAgICAgIGNhc2UgIlBPU1QiOgogICAgICAgICAgcmV0dXJuICJ3YXJuaW5nIjsKICAgICAgICBjYXNlICJERUxFVEUiOgogICAgICAgICAgcmV0dXJuICJkYW5nZXIiOwogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAicHJpbWFyeSI7CiAgICAgIH0KICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["UserListTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserListTable.vue","sourceRoot":"src/components/user-detail","sourcesContent":["<template>\n  <CCardBody>\n    <CDataTable\n      :items=\"changeData\"\n      :fields=\"fields\"\n      :items-per-page=\"10\"\n      hover\n      sorter\n    >\n      <template #request_method=\"{item}\">\n        <td>\n          <CBadge :color=\"getBadge(item.request_method)\">\n            {{ item.request_method }}\n          </CBadge>\n        </td>\n      </template>\n      <template #show_details=\"{item, index}\">\n        <td class=\"py-2\">\n          <CButton\n            color=\"primary\"\n            variant=\"outline\"\n            square\n            size=\"sm\"\n            @click=\"toggleDetails(item, index)\"\n          >\n            {{ Boolean(item._toggled) ? \"Hide\" : \"Show\" }}\n          </CButton>\n        </td>\n      </template>\n      <template #details=\"{item}\">\n        <CCollapse :show=\"Boolean(item._toggled)\" :duration=\"collapseDuration\">\n          <detail-request :item=\"item\"></detail-request>\n        </CCollapse>\n      </template>\n    </CDataTable>\n    <CPagination\n      :activePage.sync=\"page\"\n      :pages=\"totalpage\"\n      size=\"sm\"\n      align=\"center\"\n      @update:activePage=\"getResultPage(page)\"\n    />\n  </CCardBody>\n</template>\n<script>\nimport UserService from \"../../service/userService\";\nimport Api from \"@/constants/backendApi\";\nimport DetailRequest from \"@/components/DetailRequest\";\nexport default {\n  name: \"UserListTable\",\n  components: {\n    DetailRequest\n  },\n  data() {\n    return {\n      data: [],\n      collapseDuration: 0,\n      fields: [\n        { key: \"user_id\" },\n        { key: \"url\" },\n        { key: \"request_method\" },\n        { key: \"status\" },\n        {\n          key: \"show_details\",\n          label: \"Detail\",\n          _style: \"width:1%\",\n          sorter: false,\n          filter: false\n        }\n      ],\n      page: 1,\n      totalpage: 1\n    };\n  },\n  mounted() {\n    this.getData();\n  },\n  watch: {\n    $route(to, from) {\n      if (to !== from) {\n        location.reload();\n      }\n    }\n  },\n  computed: {\n    changeData() {\n      return this.data;\n    }\n  },\n  methods: {\n    async getData() {\n      let response = \"\";\n      this.page = parseInt(this.$route.query.page) || 1;\n\n      response = await UserService.getUserBoard(\n        `${Api.USER_DETAILS}?page=${this.page}&user_id=${this.$route.params.user_id}`\n      );\n\n      this.totalpage = Math.ceil(response.data.counts / 10);\n      this.data = response.data.results.map((item, id) => {\n        return { ...item, id };\n      });\n    },\n    getResultPage(page) {\n      this.page = page;\n      this.$router.push({\n        path: this.$route.fullPath,\n        query: { page: this.page }\n      });\n    },\n    toggleDetails(item) {\n      this.$set(this.data[item.id], \"_toggled\", !item._toggled);\n      this.collapseDuration = 300;\n      this.$nextTick(() => {\n        this.collapseDuration = 0;\n      });\n    },\n    getBadge(request_method) {\n      switch (request_method) {\n        case \"GET\":\n          return \"success\";\n        case \"OPTIONS\":\n          return \"secondary\";\n        case \"POST\":\n          return \"warning\";\n        case \"DELETE\":\n          return \"danger\";\n        default:\n          \"primary\";\n      }\n    }\n  }\n};\n</script>\n"]}]}