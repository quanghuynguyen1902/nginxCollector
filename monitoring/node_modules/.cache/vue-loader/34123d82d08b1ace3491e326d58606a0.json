{"remainingRequest":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quanghuy/Desktop/dashboard/montoring/src/components/Notification/NotificationItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quanghuy/Desktop/dashboard/montoring/src/components/Notification/NotificationItem.vue","mtime":1619541653086},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/babel-loader/lib/index.js","mtime":1613788894194},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js","mtime":1613788894243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IFRpbWVVdGlsIH0gZnJvbSAiQC91dGlsL3RpbWVVdGlscyI7CmltcG9ydCBBcGkgZnJvbSAiQC9jb25zdGFudHMvYmFja2VuZEFwaSI7CmltcG9ydCBVc2VyU2VydmljZSBmcm9tICIuLi8uLi9hcGkvdXNlclNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIG5vdGlmeTogewogICAgICB0eXBlOiBPYmplY3QKICAgIH0sCiAgICBhbGxSZWFkZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICBpZiAodGhpcy5ub3RpZnkuc3RhdHVzID09PSAiVSIpIHsKICAgICAgdGhpcy5pc1JlYWRlZCA9IGZhbHNlOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5pc1JlYWRlZCA9IHRydWU7CiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXNSZWFkZWQ6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHRpbWVXaXRoQWdvRm9ybWF0KCkgewogICAgICByZXR1cm4gVGltZVV0aWwuZm9ybWF0VGltZUFnbyh0aGlzLm5vdGlmeS5jcmVhdGVkX2F0KTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGNoZWNrUmVhZE5vdGlmeSgpIHsKICAgICAgdGhpcy5pc1JlYWRlZCA9IHRydWU7CiAgICAgIGF3YWl0IFVzZXJTZXJ2aWNlLmdldFVzZXJCb2FyZCgKICAgICAgICBgJHtBcGkuTk9USUZJQ0FUSU9OfWAgKyBgJHt0aGlzLm5vdGlmeS5zbHVnfWAgKyAiLyIKICAgICAgKTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["NotificationItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NotificationItem.vue","sourceRoot":"src/components/Notification","sourcesContent":["<template>\n  <div\n    @click=\"checkReadNotify\"\n    :class=\"['notification-item', isReaded || allReaded ? 'read' : 'unread']\"\n  >\n    <div class=\"py-2\">\n      <CIcon style=\"color: #e2a209\" name=\"cil-warning\" />\n    </div>\n    <div class=\"mx-3\">\n      <div class=\"notify-content\">{{ notify.content }}</div>\n      <div class=\"notify-create\">\n        <CIcon style=\"width: 0.7rem; height: 0.7rem\" name=\"cil-clock\" />\n        {{ timeWithAgoFormat }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { TimeUtil } from \"@/util/timeUtils\";\nimport Api from \"@/constants/backendApi\";\nimport UserService from \"../../api/userService\";\nexport default {\n  props: {\n    notify: {\n      type: Object\n    },\n    allReaded: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted() {\n    if (this.notify.status === \"U\") {\n      this.isReaded = false;\n    } else {\n      this.isReaded = true;\n    }\n  },\n  data() {\n    return {\n      isReaded: false\n    };\n  },\n  computed: {\n    timeWithAgoFormat() {\n      return TimeUtil.formatTimeAgo(this.notify.created_at);\n    }\n  },\n  methods: {\n    async checkReadNotify() {\n      this.isReaded = true;\n      await UserService.getUserBoard(\n        `${Api.NOTIFICATION}` + `${this.notify.slug}` + \"/\"\n      );\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.notification-item {\n  min-width: 500px;\n  max-width: 800px;\n  padding: 10px;\n  border-bottom: 1px dashed #c0c0c0;\n  color: #000;\n  display: flex;\n  background-color: #fff;\n  &:hover {\n    background-color: #f6f6f6;\n  }\n  cursor: pointer;\n}\n\n.notification-item.unread {\n  background-color: #f0f0f0;\n}\n\n.notify-content {\n  font-size: 1.2em;\n}\n.notify-create {\n  font-size: 12px;\n  font-weight: 100;\n}\n</style>\n"]}]}