{"remainingRequest":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quanghuy/Desktop/dashboard/montoring/src/views/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quanghuy/Desktop/dashboard/montoring/src/views/Dashboard.vue","mtime":1619520973098},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/babel-loader/lib/index.js","mtime":1613788894194},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js","mtime":1613788894243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBGaWx0ZXJDb21wb25lbnQgZnJvbSAiQC9jb21wb25lbnRzL0ZpbHRlckNvbXBvbmVudCI7CmltcG9ydCBEZXRhaWxSZXF1ZXN0IGZyb20gIkAvY29tcG9uZW50cy9EZXRhaWxSZXF1ZXN0IjsKaW1wb3J0IEFwaSBmcm9tICJAL2NvbnN0YW50cy9iYWNrZW5kQXBpIjsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gInZ1ZXgiOwppbXBvcnQgVXNlclNlcnZpY2UgZnJvbSAiLi4vYXBpL3VzZXJTZXJ2aWNlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJEYXNoYm9hcmQiLAogIGNvbXBvbmVudHM6IHsKICAgIEZpbHRlckNvbXBvbmVudCwKICAgIERldGFpbFJlcXVlc3QKICB9LAogIG1vdW50ZWQoKSB7CiAgICBpZiAoIXRoaXMuY3VycmVudFVzZXIpIHsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi9sb2dpbiIpOwogICAgfQogICAgdGhpcy5nZXREYXRhKCk7CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3BlbkZpbHRlcjogZmFsc2UsCiAgICAgIGNvbGxhcHNlRHVyYXRpb246IDAsCiAgICAgIGZpZWxkczogWwogICAgICAgIHsga2V5OiAidXNlcl9pZCIgfSwKICAgICAgICB7IGtleTogInVybCIgfSwKICAgICAgICB7IGtleTogInJlcXVlc3RfbWV0aG9kIiB9LAogICAgICAgIHsga2V5OiAic3RhdHVzIiB9LAogICAgICAgIHsKICAgICAgICAgIGtleTogInNob3dfZGV0YWlscyIsCiAgICAgICAgICBsYWJlbDogIkRldGFpbCIsCiAgICAgICAgICBfc3R5bGU6ICJ3aWR0aDoxJSIsCiAgICAgICAgICBzb3J0ZXI6IGZhbHNlLAogICAgICAgICAgZmlsdGVyOiBmYWxzZQogICAgICAgIH0KICAgICAgXSwKICAgICAgZGF0YTogW10sCiAgICAgIHBhZ2U6IDEsCiAgICAgIHRvdGFscGFnZTogMQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsiZ2V0TWV0aG9kIiwgImdldFVzZXJJZCIsICJnZXRVcmwiLCAiZ2V0VGltZSJdKSwKICAgIGNoYW5nZURhdGEoKSB7CiAgICAgIHJldHVybiB0aGlzLmRhdGE7CiAgICB9LAogICAgY3VycmVudFVzZXIoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5hdXRoLnVzZXI7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJHJvdXRlKHRvLCBmcm9tKSB7CiAgICAgIGlmICh0byAhPT0gZnJvbSkgewogICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBnZXREYXRhKCkgewogICAgICBsZXQgcmVzcG9uc2UgPSAiIjsKICAgICAgdGhpcy5wYWdlID0gcGFyc2VJbnQodGhpcy4kcm91dGUucXVlcnkucGFnZSkgfHwgMTsKICAgICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5Lm1ldGhvZCkgewogICAgICAgIGxldCBxdWVyeSA9IGA/bWV0aG9kPSR7dGhpcy4kcm91dGUucXVlcnkubWV0aG9kfSZwYWdlPSR7dGhpcy5wYWdlfWA7CiAgICAgICAgaWYgKHRoaXMuJHJvdXRlLnF1ZXJ5LnVzZXJfaWQpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgic2V0VXNlcklkIiwgdGhpcy4kcm91dGUucXVlcnkudXNlcl9pZCk7CiAgICAgICAgICBxdWVyeSArPSBgJnVzZXJfaWQ9JHt0aGlzLiRyb3V0ZS5xdWVyeS51c2VyX2lkfWA7CiAgICAgICAgfQogICAgICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS51cmwpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgic2V0VXJsIiwgdGhpcy4kcm91dGUucXVlcnkudXJsKTsKICAgICAgICAgIHF1ZXJ5ICs9IGAmdXJsPSR7dGhpcy4kcm91dGUucXVlcnkudXJsfWA7CiAgICAgICAgfQogICAgICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS50aW1lX2Zyb20pIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgic2V0VGltZSIsIHRoaXMuJHJvdXRlLnF1ZXJ5LnRpbWVfZnJvbSk7CiAgICAgICAgICBxdWVyeSArPSBgJnRpbWVfZnJvbT0ke3RoaXMuJHJvdXRlLnF1ZXJ5LnRpbWVfZnJvbX1gOwogICAgICAgIH0KICAgICAgICByZXNwb25zZSA9IGF3YWl0IFVzZXJTZXJ2aWNlLmdldFVzZXJCb2FyZCgKICAgICAgICAgIGAke0FwaS5EQVNIQk9BUkRfRklMVEVSfWAgKyBxdWVyeQogICAgICAgICk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCBVc2VyU2VydmljZS5nZXRVc2VyQm9hcmQoCiAgICAgICAgICBgJHtBcGkuREFTSEJPQVJEfT9wYWdlPSR7dGhpcy5wYWdlfWAKICAgICAgICApOwogICAgICB9CiAgICAgIHRoaXMudG90YWxwYWdlID0gTWF0aC5jZWlsKHJlc3BvbnNlLmRhdGEuY291bnRzIC8gMTApOwogICAgICB0aGlzLmRhdGEgPSByZXNwb25zZS5kYXRhLnJlc3VsdHMubWFwKChpdGVtLCBpZCkgPT4gewogICAgICAgIGlmICghaXRlbS51c2VyX2lkKSB7CiAgICAgICAgICBpdGVtLnVzZXJfaWQgPSAiQW5vbnltb3VzIjsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHsgLi4uaXRlbSwgaWQgfTsKICAgICAgfSk7CiAgICB9LAogICAgZmlsdGVyRnVudGlvbigpIHsKICAgICAgdGhpcy5wYWdlID0gMTsKICAgICAgY29uc3QgcXVlcnkgPSB7fTsKICAgICAgcXVlcnkubWV0aG9kID0gdGhpcy5nZXRNZXRob2Q7CiAgICAgIHF1ZXJ5LnBhZ2UgPSB0aGlzLnBhZ2U7CiAgICAgIGlmICh0aGlzLmdldFVzZXJJZCkgewogICAgICAgIHF1ZXJ5LnVzZXJfaWQgPSB0aGlzLmdldFVzZXJJZDsKICAgICAgfQogICAgICBpZiAodGhpcy5nZXRVcmwpIHsKICAgICAgICBxdWVyeS51cmwgPSB0aGlzLmdldFVybDsKICAgICAgfQogICAgICBpZiAodGhpcy5nZXRUaW1lKSB7CiAgICAgICAgcXVlcnkudGltZV9mcm9tID0gdGhpcy5nZXRUaW1lOwogICAgICB9CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAiRGFzaGJvYXJkIiwKICAgICAgICBxdWVyeTogcXVlcnkKICAgICAgfSk7CiAgICB9LAogICAgZ2V0QmFkZ2UocmVxdWVzdF9tZXRob2QpIHsKICAgICAgc3dpdGNoIChyZXF1ZXN0X21ldGhvZCkgewogICAgICAgIGNhc2UgIkdFVCI6CiAgICAgICAgICByZXR1cm4gInN1Y2Nlc3MiOwogICAgICAgIGNhc2UgIk9QVElPTlMiOgogICAgICAgICAgcmV0dXJuICJzZWNvbmRhcnkiOwogICAgICAgIGNhc2UgIlBPU1QiOgogICAgICAgICAgcmV0dXJuICJ3YXJuaW5nIjsKICAgICAgICBjYXNlICJERUxFVEUiOgogICAgICAgICAgcmV0dXJuICJkYW5nZXIiOwogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAicHJpbWFyeSI7CiAgICAgIH0KICAgIH0sCiAgICB0b2dnbGVEZXRhaWxzKGl0ZW0pIHsKICAgICAgdGhpcy4kc2V0KHRoaXMuZGF0YVtpdGVtLmlkXSwgIl90b2dnbGVkIiwgIWl0ZW0uX3RvZ2dsZWQpOwogICAgICB0aGlzLmNvbGxhcHNlRHVyYXRpb24gPSAzMDA7CiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICB0aGlzLmNvbGxhcHNlRHVyYXRpb24gPSAwOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRSZXN1bHRQYWdlKHBhZ2UpIHsKICAgICAgdGhpcy5wYWdlID0gcGFnZTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIHBhdGg6IHRoaXMuJHJvdXRlLmZ1bGxQYXRoLAogICAgICAgIHF1ZXJ5OiB7IHBhZ2U6IHRoaXMucGFnZSB9CiAgICAgIH0pOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <CRow>\n      <CCol md=\"12\">\n        <CCard>\n          <CCardHeader>\n            <div class=\"button-table\">\n              <CButton color=\"dark\" size=\"sm\" @click=\"openFilter = true\">\n                Filter\n                <CIcon name=\"cil-filter\" height=\"15\"></CIcon>\n              </CButton>\n            </div>\n            <CModal\n              title=\"Options\"\n              :closeOnBackdrop=\"false\"\n              :show.sync=\"openFilter\"\n            >\n              <filter-component></filter-component>\n              <div slot=\"footer\" class=\"w-100\">\n                <CButton\n                  color=\"light\"\n                  class=\"ml-1 mr-1 float-right\"\n                  @click=\"openFilter = false\"\n                >\n                  Cancel\n                </CButton>\n                <CButton\n                  color=\"info\"\n                  class=\"ml-1 mr-1 float-right\"\n                  @click=\"filterFuntion\"\n                >\n                  Apply\n                </CButton>\n              </div>\n            </CModal>\n          </CCardHeader>\n\n          <CCardBody>\n            <CDataTable\n              :items=\"changeData\"\n              :fields=\"fields\"\n              :items-per-page=\"10\"\n              hover\n              sorter\n            >\n              <template #request_method=\"{item}\">\n                <td>\n                  <CBadge :color=\"getBadge(item.request_method)\">\n                    {{ item.request_method }}\n                  </CBadge>\n                </td>\n              </template>\n              <template #show_details=\"{item, index}\">\n                <td class=\"py-2\">\n                  <CButton\n                    color=\"primary\"\n                    variant=\"outline\"\n                    square\n                    size=\"sm\"\n                    @click=\"toggleDetails(item, index)\"\n                  >\n                    {{ Boolean(item._toggled) ? \"Hide\" : \"Show\" }}\n                  </CButton>\n                </td>\n              </template>\n              <template #details=\"{item}\">\n                <CCollapse\n                  :show=\"Boolean(item._toggled)\"\n                  :duration=\"collapseDuration\"\n                >\n                  <detail-request :item=\"item\"></detail-request>\n                </CCollapse>\n              </template>\n            </CDataTable>\n            <CPagination\n              :activePage.sync=\"page\"\n              :pages=\"totalpage\"\n              size=\"sm\"\n              align=\"center\"\n              @update:activePage=\"getResultPage(page)\"\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  </div>\n</template>\n\n<script>\nimport FilterComponent from \"@/components/FilterComponent\";\nimport DetailRequest from \"@/components/DetailRequest\";\nimport Api from \"@/constants/backendApi\";\nimport { mapGetters } from \"vuex\";\nimport UserService from \"../api/userService\";\nexport default {\n  name: \"Dashboard\",\n  components: {\n    FilterComponent,\n    DetailRequest\n  },\n  mounted() {\n    if (!this.currentUser) {\n      this.$router.push(\"/login\");\n    }\n    this.getData();\n  },\n  data() {\n    return {\n      openFilter: false,\n      collapseDuration: 0,\n      fields: [\n        { key: \"user_id\" },\n        { key: \"url\" },\n        { key: \"request_method\" },\n        { key: \"status\" },\n        {\n          key: \"show_details\",\n          label: \"Detail\",\n          _style: \"width:1%\",\n          sorter: false,\n          filter: false\n        }\n      ],\n      data: [],\n      page: 1,\n      totalpage: 1\n    };\n  },\n  computed: {\n    ...mapGetters([\"getMethod\", \"getUserId\", \"getUrl\", \"getTime\"]),\n    changeData() {\n      return this.data;\n    },\n    currentUser() {\n      return this.$store.state.auth.user;\n    }\n  },\n  watch: {\n    $route(to, from) {\n      if (to !== from) {\n        location.reload();\n      }\n    }\n  },\n  methods: {\n    async getData() {\n      let response = \"\";\n      this.page = parseInt(this.$route.query.page) || 1;\n      if (this.$route.query.method) {\n        let query = `?method=${this.$route.query.method}&page=${this.page}`;\n        if (this.$route.query.user_id) {\n          this.$store.commit(\"setUserId\", this.$route.query.user_id);\n          query += `&user_id=${this.$route.query.user_id}`;\n        }\n        if (this.$route.query.url) {\n          this.$store.commit(\"setUrl\", this.$route.query.url);\n          query += `&url=${this.$route.query.url}`;\n        }\n        if (this.$route.query.time_from) {\n          this.$store.commit(\"setTime\", this.$route.query.time_from);\n          query += `&time_from=${this.$route.query.time_from}`;\n        }\n        response = await UserService.getUserBoard(\n          `${Api.DASHBOARD_FILTER}` + query\n        );\n      } else {\n        response = await UserService.getUserBoard(\n          `${Api.DASHBOARD}?page=${this.page}`\n        );\n      }\n      this.totalpage = Math.ceil(response.data.counts / 10);\n      this.data = response.data.results.map((item, id) => {\n        if (!item.user_id) {\n          item.user_id = \"Anonymous\";\n        }\n        return { ...item, id };\n      });\n    },\n    filterFuntion() {\n      this.page = 1;\n      const query = {};\n      query.method = this.getMethod;\n      query.page = this.page;\n      if (this.getUserId) {\n        query.user_id = this.getUserId;\n      }\n      if (this.getUrl) {\n        query.url = this.getUrl;\n      }\n      if (this.getTime) {\n        query.time_from = this.getTime;\n      }\n      this.$router.push({\n        name: \"Dashboard\",\n        query: query\n      });\n    },\n    getBadge(request_method) {\n      switch (request_method) {\n        case \"GET\":\n          return \"success\";\n        case \"OPTIONS\":\n          return \"secondary\";\n        case \"POST\":\n          return \"warning\";\n        case \"DELETE\":\n          return \"danger\";\n        default:\n          \"primary\";\n      }\n    },\n    toggleDetails(item) {\n      this.$set(this.data[item.id], \"_toggled\", !item._toggled);\n      this.collapseDuration = 300;\n      this.$nextTick(() => {\n        this.collapseDuration = 0;\n      });\n    },\n    getResultPage(page) {\n      this.page = page;\n      this.$router.push({\n        path: this.$route.fullPath,\n        query: { page: this.page }\n      });\n    }\n  }\n};\n</script>\n\n<style lang=\"css\">\n.button-table {\n  font-size: 25px;\n  text-align: right;\n}\n</style>\n"]}]}