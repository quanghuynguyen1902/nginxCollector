{"remainingRequest":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quanghuy/Desktop/dashboard/montoring/src/components/DropdownNotification.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quanghuy/Desktop/dashboard/montoring/src/components/DropdownNotification.vue","mtime":1619520963794},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/babel-loader/lib/index.js","mtime":1613788894194},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js","mtime":1613788894243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBcGkgZnJvbSAiQC9jb25zdGFudHMvYmFja2VuZEFwaSI7CmltcG9ydCBVc2VyU2VydmljZSBmcm9tICIuLi9zZXJ2aWNlL3VzZXJTZXJ2aWNlIjsKaW1wb3J0IE5vdGlmaWNhdGlvbkl0ZW0gZnJvbSAiQC9jb21wb25lbnRzL05vdGlmaWNhdGlvbkl0ZW0iOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkRyb3Bkb3duTm90aWZpY2F0aW9uIiwKICBjb21wb25lbnRzOiB7CiAgICBOb3RpZmljYXRpb25JdGVtCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbm90aWZpY2F0aW9uX2NvdW50OiAwLAogICAgICBub3RpZmljYXRpb25zOiBbXQogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldE5vdGlmaWNhdGlvbkNvdW50KCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBnZXROb3RpZmljYXRpb25Db3VudCgpIHsKICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBVc2VyU2VydmljZS5nZXRVc2VyQm9hcmQoQXBpLk5PVElGSUNBVElPTl9DT1VOVCk7CiAgICAgIHRoaXMubm90aWZpY2F0aW9uX2NvdW50ID0gcmVzcG9uc2UuZGF0YVswXS5xdWFudGl0eTsKICAgIH0sCiAgICBhc3luYyBnZXROb3RpZmljYXRpb24oKSB7CiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgVXNlclNlcnZpY2UuZ2V0VXNlckJvYXJkKEFwaS5OT1RJRklDQVRJT04pOwogICAgICB0aGlzLm5vdGlmaWNhdGlvbnMgPSByZXNwb25zZS5kYXRhOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["DropdownNotification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DropdownNotification.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <CDropdown in-nav class=\"c-header-nav-items\" add-menu-classes=\"pt-0\">\n    <template #toggler>\n      <CHeaderNavLink>\n        <div class=\"notification\" @click=\"getNotification\">\n          <CIcon size=\"lg\" name=\"cil-bell\" />\n          <span v-if=\"notification_count > 0\" class=\"badge\">{{\n            notification_count\n          }}</span>\n        </div>\n      </CHeaderNavLink>\n    </template>\n    <CDropdownHeader tag=\"div\" class=\"text-center h6 d-flex border-bottom\">\n      <strong>Notification</strong>\n      <div class=\"mark-notification\">Mark As Read</div>\n    </CDropdownHeader>\n    <div v-for=\"(notify, index) in notifications\" :key=\"index\">\n      <NotificationItem :notify=\"notify\"></NotificationItem>\n    </div>\n  </CDropdown>\n</template>\n\n<script>\nimport Api from \"@/constants/backendApi\";\nimport UserService from \"../service/userService\";\nimport NotificationItem from \"@/components/NotificationItem\";\nexport default {\n  name: \"DropdownNotification\",\n  components: {\n    NotificationItem\n  },\n  data() {\n    return {\n      notification_count: 0,\n      notifications: []\n    };\n  },\n  mounted() {\n    this.getNotificationCount();\n  },\n  methods: {\n    async getNotificationCount() {\n      const response = await UserService.getUserBoard(Api.NOTIFICATION_COUNT);\n      this.notification_count = response.data[0].quantity;\n    },\n    async getNotification() {\n      const response = await UserService.getUserBoard(Api.NOTIFICATION);\n      this.notifications = response.data;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.c-icon {\n  margin-right: 0.3rem;\n}\n\n.mark-notification {\n  margin-left: 100px;\n  color: #2faff7;\n  &:hover {\n    color: #077cdd;\n  }\n  cursor: pointer;\n}\n.notification {\n  position: relative;\n  .badge {\n    position: absolute;\n    top: -5px;\n    right: -5px;\n    padding: 2px 2px;\n    border-radius: 50%;\n    background-color: red;\n    color: white;\n  }\n}\n</style>\n"]}]}