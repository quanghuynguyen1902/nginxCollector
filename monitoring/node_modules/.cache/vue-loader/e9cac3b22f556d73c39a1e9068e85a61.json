{"remainingRequest":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quanghuy/Desktop/dashboard/montoring/src/components/Notification/NotificationItem.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/quanghuy/Desktop/dashboard/montoring/src/components/Notification/NotificationItem.vue","mtime":1619521315685},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/css-loader/dist/cjs.js","mtime":1612063424976},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1613788894243},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/postcss-loader/src/index.js","mtime":1612063425289},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/sass-loader/dist/cjs.js","mtime":1614394343146},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/cache-loader/dist/cjs.js","mtime":1612063424763},{"path":"/home/quanghuy/Desktop/dashboard/montoring/node_modules/vue-loader/lib/index.js","mtime":1613788894243}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm5vdGlmaWNhdGlvbi1pdGVtIHsKICBwYWRkaW5nOiAxNXB4OwogIGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgbGlnaHRncmF5OwogIGNvbG9yOiAjMDAwOwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgJjpob3ZlciB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjZmNmY2OwogIH0KfQoKLm5vdGlmaWNhdGlvbi1pdGVtLm5vdC1yZWFkIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlN2U3Owp9Cgoubm90aWZ5LWNvbnRlbnQgewogIGZvbnQtc2l6ZTogMS4yZW07Cn0KLm5vdGlmeS1jcmVhdGUgewogIGZvbnQtc2l6ZTogMTJweDsKICBmb250LXdlaWdodDogMTAwOwp9Cg=="},{"version":3,"sources":["NotificationItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NotificationItem.vue","sourceRoot":"src/components/Notification","sourcesContent":["<template>\n  <CDropdownItem\n    :class=\"['notification-item', isReaded || allReaded ? 'read' : 'unread']\"\n  >\n    <div class=\"d-inline-block\">\n      <CIcon style=\"color: #e2a209\" name=\"cil-warning\" />\n    </div>\n    <div class=\"d-inline-block mx-3\">\n      <div class=\"notify-content\">{{ notify.content }}</div>\n      <div class=\"notify-create\">\n        <CIcon style=\"width: 0.7rem; height: 0.7rem\" name=\"cil-clock\" />\n        {{ timeWithAgoFormat }}\n      </div>\n    </div>\n  </CDropdownItem>\n</template>\n\n<script>\nimport { TimeUtil } from \"@/util/timeUtils\";\n\nexport default {\n  props: {\n    notify: {\n      type: Object\n    },\n    allReaded: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted() {\n    if (this.notify.status === \"U\") {\n      this.isReaded = false;\n    } else {\n      this.isReaded = true;\n    }\n  },\n  data() {\n    return {\n      isReaded: false\n    };\n  },\n  computed: {\n    timeWithAgoFormat() {\n      return TimeUtil.formatTimeAgo(this.notify.created_at);\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.notification-item {\n  padding: 15px;\n  border-bottom: 1px dashed lightgray;\n  color: #000;\n  background-color: #fff;\n  &:hover {\n    background-color: #f6f6f6;\n  }\n}\n\n.notification-item.not-read {\n  background-color: #e7e7e7;\n}\n\n.notify-content {\n  font-size: 1.2em;\n}\n.notify-create {\n  font-size: 12px;\n  font-weight: 100;\n}\n</style>\n"]}]}